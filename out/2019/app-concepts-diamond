<!DOCTYPE HTML>
<html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>The app-concepts diamond</title><link rel="icon" href=""><link href="https://fonts.googleapis.com/css?family=Inconsolata|Merriweather" rel="stylesheet"><link rel="stylesheet" type="text/css" href="../hash/bbdb3309c85cc05af4572bd7e5eeb723.css"><meta name="twitter:site:id" content="18271443"><meta name="twitter:title" content="The app-concepts diamond"></head><body><header class="global-page-header"><div class="container"><a href="..">Chris Martin</a></div></header><main><div><div class="post-head container"><h1 class="post-title">The app-concepts diamond</h1><div class="post-date">2019 May 25</div></div><div class="post-body"><div class="container"><p>I find that when I break up an application into packages by feature, the dependency graph nearly always has this &quot;diamond&quot; shape:</p><div style="text-align: center;"><img src="../hash/25b2738737c9b8d8e11fc967bfaa1b81.png" style="max-width: 100%;"></div><p>Before I realized this, I struggled a lot. My naive impulse was to have four packages: &quot;Feature 1&quot;, &quot;Feature 2&quot;, &quot;Feature 3&quot;, and a &quot;Common&quot; package for non-feature-specific stuff. This leads to one of three huge mistakes:</p><ol><li><p>Dependency cycles (each feature imports the common project, and the common project imports the features);</p></li><li><p>Not having the &quot;app concepts&quot; component (this is usually only possible in untyped languages);</p></li><li><p>Not having the &quot;app&quot; component (its role is instead fulfilled by configuration for some framework - Java Servlets, cgi-bin, BEAM, what have you).</p></li></ol><p>I get tempted by the second and third mistakes because both the &quot;app concepts&quot; and &quot;app&quot; components are often very small. Sometimes the &quot;app concepts&quot; package is only <a href="https://hackage.haskell.org/package/stripe-concepts">a handful of newtypes</a>. Sometimes all the &quot;app&quot; package does is import the features and put them into a list. But even if a package only contains a single thing, if that thing is necessary, then that thing needs a place.</p></div></div></div></main><div class="post-footer container"><p>I write about Haskell and related topics; you can find my works online on <a href="http://typeclasses.com">Type Classes</a> and in print from <a href="http://joyofhaskell.com"><span style="text-decoration: italic;">The Joy of Haskell</span></a>.</p></div></body></html>